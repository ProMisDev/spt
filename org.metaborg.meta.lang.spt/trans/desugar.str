module desugar

imports
  signatures/SPT-sig

signature constructors
  // Test(description, open_marker, fragment, close_marker, expectations)
  Test : String * String * Fragment * String * List -> Test
  // ParseTo(language_name, open_marker, fragment, close_marker)
  ParseTo : String * String * Fragment * String -> ParseTo

rules
  desugar-before = topdown(try(desugar-term-before))
  
  // Desugar Test
  desugar-term-before:
    cons#([description, open_marker, fragment, close_marker, exps]) -> Test(description, open_marker, fragment, close_marker, exps)
    where
      <eq> (cons, "Test2") + <eq> (cons, "Test3") + <eq> (cons, "Test4")
  
  // Desugar ParseTo
  desugar-term-before:
    cons#([lang_name, open_marker, fragment, close_marker]) -> ParseTo(lang_name, open_marker, fragment, close_marker)
    where
      <eq> (cons, "ParseTo2") + <eq> (cons, "ParseTo3") + <eq> (cons, "ParseTo4")